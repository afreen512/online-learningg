{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\ANA-website\\\\client\\\\pages\\\\user\\\\profile\\\\update.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport { API } from '../../../config';\nimport { isAuth, updateUser } from '../../../helpers/auth';\nimport withUser from '../../withUser';\n\nvar Profile = function Profile(_ref) {\n  _s();\n\n  var user = _ref.user,\n      token = _ref.token;\n\n  var _useState = useState({\n    name: user.name,\n    email: user.email,\n    password: '',\n    error: '',\n    success: '',\n    buttonText: 'Update',\n    loadedCategories: [],\n    categories: user.categories\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText,\n      loadedCategories = state.loadedCategories,\n      categories = state.categories; // load categories when component mounts using useEffect\n\n  useEffect(function () {\n    loadCategories();\n  }, []);\n\n  var loadCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(API, \"/categories\"));\n\n            case 2:\n              response = _context.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                loadedCategories: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var clickedCategory = categories.indexOf(c);\n\n      var all = _toConsumableArray(categories);\n\n      if (clickedCategory === -1) {\n        all.push(c);\n      } else {\n        all.splice(clickedCategory, 1);\n      }\n\n      console.log('all >> categories', all);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        categories: all,\n        success: '',\n        error: ''\n      }));\n    };\n  }; // show categories > checkbox\n\n\n  var showCategories = function showCategories() {\n    return loadedCategories && loadedCategories.map(function (c, i) {\n      return __jsx(\"li\", {\n        className: \"list-unstyled\",\n        key: c._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: handleToggle(c._id),\n        checked: categories.includes(c._id),\n        className: \"mr-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), __jsx(\"label\", {\n        className: \"form-check-label\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, c.name));\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Update'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Updating...'\n              }));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.put(\"\".concat(API, \"/user\"), {\n                name: name,\n                password: password,\n                categories: categories\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n\n            case 5:\n              response = _context2.sent;\n              console.log(response);\n              updateUser(response.data, function () {\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  buttonText: 'Updated',\n                  success: 'Profile updated successfully'\n                }));\n              });\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Update',\n                error: _context2.t0.response.data.error\n              }));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var updateForm = function updateForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted ml-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Category\"), __jsx(\"ul\", {\n      style: {\n        maxHeight: '100px',\n        overflowY: 'scroll'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, showCategories())), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Update Profile\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), updateForm()));\n};\n\n_s(Profile, \"adR9X3o1qkLshDjVIPkdG6HKVuc=\");\n\n_c = Profile;\nexport default _c2 = withUser(Profile);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/ANA-website/client/pages/user/profile/update.js"],"names":["useState","useEffect","Layout","Router","axios","showSuccessMessage","showErrorMessage","API","isAuth","updateUser","withUser","Profile","user","token","name","email","password","error","success","buttonText","loadedCategories","categories","state","setState","loadCategories","get","response","data","handleToggle","c","clickedCategory","indexOf","all","push","splice","console","log","showCategories","map","i","_id","includes","handleChange","e","target","value","handleSubmit","preventDefault","put","headers","Authorization","updateForm","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport { API } from '../../../config';\nimport { isAuth, updateUser } from '../../../helpers/auth';\nimport withUser from '../../withUser';\n\nconst Profile = ({ user, token }) => {\n    const [state, setState] = useState({\n        name: user.name,\n        email: user.email,\n        password: '',\n        error: '',\n        success: '',\n        buttonText: 'Update',\n        loadedCategories: [],\n        categories: user.categories\n    });\n\n    const { name, email, password, error, success, buttonText, loadedCategories, categories } = state;\n\n    // load categories when component mounts using useEffect\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const loadCategories = async () => {\n        const response = await axios.get(`${API}/categories`);\n        setState({ ...state, loadedCategories: response.data });\n    };\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const clickedCategory = categories.indexOf(c);\n        const all = [...categories];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        console.log('all >> categories', all);\n        setState({ ...state, categories: all, success: '', error: '' });\n    };\n\n    // show categories > checkbox\n    const showCategories = () => {\n        return (\n            loadedCategories &&\n            loadedCategories.map((c, i) => (\n                <li className=\"list-unstyled\" key={c._id}>\n                    <input\n                        type=\"checkbox\"\n                        onChange={handleToggle(c._id)}\n                        checked={categories.includes(c._id)}\n                        className=\"mr-2\"\n                    />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Update' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setState({ ...state, buttonText: 'Updating...' });\n        try {\n            const response = await axios.put(\n                `${API}/user`,\n                {\n                    name,\n                    password,\n                    categories\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                }\n            );\n            console.log(response);\n            updateUser(response.data, () => {\n                setState({\n                    ...state,\n                    buttonText: 'Updated',\n                    success: 'Profile updated successfully'\n                });\n            });\n        } catch (error) {\n            console.log(error);\n            setState({ ...state, buttonText: 'Update', error: error.response.data.error });\n        }\n    };\n\n    const updateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    value={name}\n                    onChange={handleChange('name')}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type your name\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={email}\n                    onChange={handleChange('email')}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Type your email\"\n                    required\n                    disabled\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={password}\n                    onChange={handleChange('password')}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type your password\"\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted ml-4\">Category</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\n            </div>\n\n            <div className=\"form-group\">\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <h1>Update Profile</h1>\n                <br />\n                {success && showSuccessMessage(success)}\n                {error && showErrorMessage(error)}\n                {updateForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default withUser(Profile);\n"]},"metadata":{},"sourceType":"module"}