{"ast":null,"code":"var _jsxFileName = \"E:\\\\ANA-website\\\\client\\\\pages\\\\admin\\\\category\\\\create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from 'next/dynamic';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Resizer from 'react-image-file-resizer';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport Layout from '../../../components/Layout';\nimport withAdmin from '../../withAdmin';\nimport 'react-quill/dist/quill.bubble.css';\n\nconst Create = ({\n  user,\n  token\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    error: '',\n    success: '',\n    buttonText: 'Create',\n    image: ''\n  });\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    0: imageUploadButtonName,\n    1: setImageUploadButtonName\n  } = useState('Upload image');\n  const {\n    name,\n    success,\n    error,\n    image,\n    buttonText,\n    imageUploadText\n  } = state;\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  const handleContent = e => {\n    console.log(e);\n    setContent(e);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      success: '',\n      error: ''\n    }));\n  };\n\n  const handleImage = event => {\n    let fileInput = false;\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    setImageUploadButtonName(event.target.files[0].name);\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'JPEG', 100, 0, uri => {\n        // console.log(uri);\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          image: uri,\n          success: '',\n          error: ''\n        }));\n      }, 'base64');\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Creating'\n    }));\n    console.table({\n      name,\n      content,\n      image\n    });\n\n    try {\n      const response = await axios.post(`${API}/category`, {\n        name,\n        content,\n        image\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('CATEGORY CREATE RESPONSE', response);\n      setImageUploadButtonName('Upload image');\n      setContent('');\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        formData: '',\n        buttonText: 'Created',\n        imageUploadText: 'Upload image',\n        success: `${response.data.name} is created`\n      }));\n    } catch (error) {\n      console.log('CATEGORY CREATE ERROR', error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Create',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const createCategoryForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    value: name,\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Content\"), __jsx(ReactQuill, {\n    value: content,\n    onChange: handleContent,\n    placeholder: \"Write something...\",\n    theme: \"bubble\",\n    className: \"pb-5 mb-3\",\n    style: {\n      border: '1px solid #666'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, imageUploadButtonName, __jsx(\"input\", {\n    onChange: handleImage,\n    type: \"file\",\n    accept: \"image/*\",\n    className: \"form-control\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Create category\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), createCategoryForm())));\n};\n\nexport default withAdmin(Create);","map":{"version":3,"sources":["E:/ANA-website/client/pages/admin/category/create.js"],"names":["dynamic","useState","useEffect","axios","Resizer","ReactQuill","ssr","API","showSuccessMessage","showErrorMessage","Layout","withAdmin","Create","user","token","state","setState","name","error","success","buttonText","image","content","setContent","imageUploadButtonName","setImageUploadButtonName","imageUploadText","handleChange","e","target","value","handleContent","console","log","handleImage","event","fileInput","files","imageFileResizer","uri","handleSubmit","preventDefault","table","response","post","headers","Authorization","formData","data","createCategoryForm","border"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Resizer from 'react-image-file-resizer';\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport Layout from '../../../components/Layout';\nimport withAdmin from '../../withAdmin';\nimport 'react-quill/dist/quill.bubble.css';\n\nconst Create = ({ user, token }) => {\n    const [state, setState] = useState({\n        name: '',\n        error: '',\n        success: '',\n        buttonText: 'Create',\n        image: ''\n    });\n    const [content, setContent] = useState('');\n    const [imageUploadButtonName, setImageUploadButtonName] = useState('Upload image');\n\n    const { name, success, error, image, buttonText, imageUploadText } = state;\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '' });\n    };\n\n    const handleContent = e => {\n        console.log(e);\n        setContent(e);\n        setState({ ...state, success: '', error: '' });\n    };\n\n    const handleImage = event => {\n        let fileInput = false;\n        if (event.target.files[0]) {\n            fileInput = true;\n        }\n        setImageUploadButtonName(event.target.files[0].name);\n        if (fileInput) {\n            Resizer.imageFileResizer(\n                event.target.files[0],\n                300,\n                300,\n                'JPEG',\n                100,\n                0,\n                uri => {\n                    // console.log(uri);\n                    setState({ ...state, image: uri, success: '', error: '' });\n                },\n                'base64'\n            );\n        }\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setState({ ...state, buttonText: 'Creating' });\n        console.table({ name, content, image });\n        try {\n            const response = await axios.post(\n                `${API}/category`,\n                { name, content, image },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                }\n            );\n            console.log('CATEGORY CREATE RESPONSE', response);\n            setImageUploadButtonName('Upload image');\n            setContent('');\n            setState({\n                ...state,\n                name: '',\n                formData: '',\n                buttonText: 'Created',\n                imageUploadText: 'Upload image',\n                success: `${response.data.name} is created`\n            });\n        } catch (error) {\n            console.log('CATEGORY CREATE ERROR', error);\n            setState({ ...state, buttonText: 'Create', error: error.response.data.error });\n        }\n    };\n\n    const createCategoryForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" required />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Content</label>\n                <ReactQuill\n                    value={content}\n                    onChange={handleContent}\n                    placeholder=\"Write something...\"\n                    theme=\"bubble\"\n                    className=\"pb-5 mb-3\"\n                    style={{ border: '1px solid #666' }}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"btn btn-outline-secondary\">\n                    {imageUploadButtonName}\n                    <input onChange={handleImage} type=\"file\" accept=\"image/*\" className=\"form-control\" hidden />\n                </label>\n            </div>\n            <div>\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <h1>Create category</h1>\n                    <br />\n                    {success && showSuccessMessage(success)}\n                    {error && showErrorMessage(error)}\n                    {createCategoryForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default withAdmin(Create);\n"]},"metadata":{},"sourceType":"module"}