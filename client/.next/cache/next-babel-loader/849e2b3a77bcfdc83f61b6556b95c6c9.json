{"ast":null,"code":"var _jsxFileName = \"E:\\\\ANA-website\\\\client\\\\pages\\\\user\\\\profile\\\\update.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport { API } from '../../../config';\nimport { isAuth, updateUser } from '../../../helpers/auth';\nimport withUser from '../../withUser';\n\nconst Profile = ({\n  user,\n  token\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: user.name,\n    email: user.email,\n    password: '',\n    error: '',\n    success: '',\n    buttonText: 'Update',\n    loadedCategories: [],\n    categories: user.categories\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText,\n    loadedCategories,\n    categories\n  } = state; // load categories when component mounts using useEffect\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loadedCategories: response.data\n    }));\n  };\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const clickedCategory = categories.indexOf(c);\n    const all = [...categories];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n    } else {\n      all.splice(clickedCategory, 1);\n    }\n\n    console.log('all >> categories', all);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      categories: all,\n      success: '',\n      error: ''\n    }));\n  }; // show categories > checkbox\n\n\n  const showCategories = () => {\n    return loadedCategories && loadedCategories.map((c, i) => __jsx(\"li\", {\n      className: \"list-unstyled\",\n      key: c._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: handleToggle(c._id),\n      checked: categories.includes(c._id),\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, c.name)));\n  };\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: 'Update'\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Updating...'\n    }));\n\n    try {\n      const response = await axios.put(`${API}/user`, {\n        name,\n        password,\n        categories\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response);\n      updateUser(response.data, () => {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          buttonText: 'Updated',\n          success: 'Profile updated successfully'\n        }));\n      });\n    } catch (error) {\n      console.log(error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Update',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const updateForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: name,\n    onChange: handleChange('name'),\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type your name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: handleChange('email'),\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Type your email\",\n    required: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: password,\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Update Profile\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), updateForm()));\n};\n\nexport default withUser(Profile);","map":{"version":3,"sources":["E:/ANA-website/client/pages/user/profile/update.js"],"names":["useState","useEffect","Layout","Router","axios","showSuccessMessage","showErrorMessage","API","isAuth","updateUser","withUser","Profile","user","token","state","setState","name","email","password","error","success","buttonText","loadedCategories","categories","loadCategories","response","get","data","handleToggle","c","clickedCategory","indexOf","all","push","splice","console","log","showCategories","map","i","_id","includes","handleChange","e","target","value","handleSubmit","preventDefault","put","headers","Authorization","updateForm","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport { API } from '../../../config';\nimport { isAuth, updateUser } from '../../../helpers/auth';\nimport withUser from '../../withUser';\n\nconst Profile = ({ user, token }) => {\n    const [state, setState] = useState({\n        name: user.name,\n        email: user.email,\n        password: '',\n        error: '',\n        success: '',\n        buttonText: 'Update',\n        loadedCategories: [],\n        categories: user.categories\n    });\n\n    const { name, email, password, error, success, buttonText, loadedCategories, categories } = state;\n\n    // load categories when component mounts using useEffect\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const loadCategories = async () => {\n        const response = await axios.get(`${API}/categories`);\n        setState({ ...state, loadedCategories: response.data });\n    };\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const clickedCategory = categories.indexOf(c);\n        const all = [...categories];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        console.log('all >> categories', all);\n        setState({ ...state, categories: all, success: '', error: '' });\n    };\n\n    // show categories > checkbox\n    const showCategories = () => {\n        return (\n            loadedCategories &&\n            loadedCategories.map((c, i) => (\n                <li className=\"list-unstyled\" key={c._id}>\n                    <input\n                        type=\"checkbox\"\n                        onChange={handleToggle(c._id)}\n                        checked={categories.includes(c._id)}\n                        className=\"mr-2\"\n                    />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Update' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setState({ ...state, buttonText: 'Updating...' });\n        try {\n            const response = await axios.put(\n                `${API}/user`,\n                {\n                    name,\n                    password,\n                    categories\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                }\n            );\n            console.log(response);\n            updateUser(response.data, () => {\n                setState({\n                    ...state,\n                    buttonText: 'Updated',\n                    success: 'Profile updated successfully'\n                });\n            });\n        } catch (error) {\n            console.log(error);\n            setState({ ...state, buttonText: 'Update', error: error.response.data.error });\n        }\n    };\n\n    const updateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    value={name}\n                    onChange={handleChange('name')}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type your name\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={email}\n                    onChange={handleChange('email')}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Type your email\"\n                    required\n                    disabled\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={password}\n                    onChange={handleChange('password')}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type your password\"\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted ml-4\">Category</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\n            </div>\n\n            <div className=\"form-group\">\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <h1>Update Profile</h1>\n                <br />\n                {success && showSuccessMessage(success)}\n                {error && showErrorMessage(error)}\n                {updateForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default withUser(Profile);\n"]},"metadata":{},"sourceType":"module"}