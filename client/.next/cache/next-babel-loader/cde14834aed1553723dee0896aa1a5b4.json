{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\ANA-website\\\\client\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nvar Register = function Register() {\n  var _useState = useState({\n    name: 'Ryan',\n    email: 'ryan@gmail.com',\n    password: 'rrrrrr',\n    error: '',\n    success: '',\n    buttonText: 'Register'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText;\n  useEffect(function () {\n    isAuth() && Router.push('/');\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setState(_objectSpread({}, state, {\n              buttonText: 'Registering'\n            }));\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(API, \"/register\"), {\n              name: name,\n              email: email,\n              password: password\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response);\n            setState(_objectSpread({}, state, {\n              name: '',\n              email: '',\n              password: '',\n              buttonText: 'Submitted',\n              success: response.data.message\n            }));\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: 'Register',\n              error: _context.t0.response.data.error\n            }));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]]);\n  }; // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\nexport default Register;","map":{"version":3,"sources":["E:/ANA-website/client/pages/register.js"],"names":["useState","useEffect","Layout","Router","axios","showSuccessMessage","showErrorMessage","API","isAuth","Register","name","email","password","error","success","buttonText","state","setState","push","handleChange","e","target","value","handleSubmit","preventDefault","post","response","console","log","data","message","registerForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nconst Register = () => {\n    const [state, setState] = useState({\n        name: 'Ryan',\n        email: 'ryan@gmail.com',\n        password: 'rrrrrr',\n        error: '',\n        success: '',\n        buttonText: 'Register'\n    });\n\n    const { name, email, password, error, success, buttonText } = state;\n\n    useEffect(() => {\n        isAuth() && Router.push('/');\n    }, []);\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setState({ ...state, buttonText: 'Registering' });\n        try {\n            const response = await axios.post(`${API}/register`, {\n                name,\n                email,\n                password\n            });\n            console.log(response);\n            setState({\n                ...state,\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n            });\n        } catch (error) {\n            console.log(error);\n            setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n        }\n    };\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n    //     setState({ ...state, buttonText: 'Registering' });\n    //     // console.table({ name, email, password });\n    //     axios\n    //         .post(`http://localhost:8000/api/register`, {\n    //             name,\n    //             email,\n    //             password\n    //         })\n    //         .then(response => {\n    //             console.log(response);\n    //             setState({\n    //                 ...state,\n    //                 name: '',\n    //                 email: '',\n    //                 password: '',\n    //                 buttonText: 'Submitted',\n    //                 success: response.data.message\n    //             });\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n    //         });\n    // };\n\n    const registerForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    value={name}\n                    onChange={handleChange('name')}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type your name\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={email}\n                    onChange={handleChange('email')}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Type your email\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={password}\n                    onChange={handleChange('password')}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type your password\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <h1>Register</h1>\n                <br />\n                {success && showSuccessMessage(success)}\n                {error && showErrorMessage(error)}\n                {registerForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}